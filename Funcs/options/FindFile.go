package options

import (
	"Exploit/Data"
	"io/ioutil"
	"os"
	"regexp"
	"strings"
)



func fuzzfile(name string ,file string)[][]string{
	fuzzObj := regexp.MustCompile(`(?i).*?`+file+`.*.json`)
	if fuzzObj == nil {
		MistakPrint("failed to get regexp object")
		os.Exit(1)
	}
	result := fuzzObj.FindAllStringSubmatch(name, -1)
	return result
}
func FindFile(path, keyworld string) {
	if keyworld != "" {
		fileList, err := ioutil.ReadDir(path)
		if err != nil {
			MistakPrint("Failed to get the underlying directory results")
			os.Exit(1)
		}
		for _ ,file := range fileList{
			if file.IsDir(){
				FindFile(path+file.Name()+"/",keyworld)
			}else{
				result := fuzzfile(file.Name(),keyworld)
				if len(result) > 0 {
					Data.FindReslt = append(Data.FindReslt,path + "/" + result[0][0])
				}
			}
		}
		PrintFindResult(Data.FindReslt)
	}
}

func PrintFindResult(Result []string){
	for _,value := range Result{
		values := strings.ReplaceAll(value,"//","/")
		OrgPrint("[+] " +values,FontColor.Green)
	}
}